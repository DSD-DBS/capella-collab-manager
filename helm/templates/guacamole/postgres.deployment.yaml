# SPDX-FileCopyrightText: Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: Apache-2.0

{{ if .Values.database.guacamole.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-guacamole-postgres
  labels:
    id: {{ .Release.Name }}-deployment-guacamole-postgres
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/guacamole" "/postgres.configmap.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount.guacamolePostgres | default 1 }}
  selector:
    matchLabels:
      id: {{ .Release.Name }}-deployment-guacamole-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        id: {{ .Release.Name }}-deployment-guacamole-postgres
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/guacamole" "/postgres.configmap.yaml") . | sha256sum }}
    spec:
      automountServiceAccountToken: false
      volumes:
        - name: {{ .Release.Name }}-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-volume-guacamole-postgres
        - name: {{ .Release.Name }}-initsql
          configMap:
            name: {{ .Release.Name }}-guacamole-postgres
      {{- include "capellacollab.pod.spec" . | indent 6 -}}
      containers:
        - name: {{ .Release.Name }}-guacamole-postgres
          {{- include "capellacollab.container.spec" . | indent 10 -}}
          {{ if .Values.docker.images.postgres }}
          image: {{ .Values.docker.images.postgres }}
          {{ else }}
          image: {{ .Values.docker.registry.external }}/postgres:14.1
          {{ end }}
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/data
            - name: POSTGRES_DB
              value: guacamole
            - name: POSTGRES_PASSWORD
              value: {{ .Values.database.guacamole.internal.password }}
            - name: POSTGRES_USER
              value: guacamole
            - name: POSTGRES_HOST_AUTH_METHOD
              value: md5
            - name: POSTGRES_INITDB_ARGS
              value: "--auth-host=md5"
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command: ["psql", "-w", "-U", "guacamole", "-d", "guacamole", "-c", "SELECT 1"]
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["psql", "-w", "-U", "guacamole", "-d", "guacamole", "-c", "SELECT 1"]
            initialDelaySeconds: 45
            timeoutSeconds: 2
          resources:
            {{ if .Values.development }}
            limits:
              cpu: "0.15"
              memory: 100Mi
              ephemeral-storage: "2Gi"
            requests:
              cpu: "0.05"
              memory: 5Mi
            {{ else }}
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1"
              ephemeral-storage: "2Gi"
            {{ end }}
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /var/lib/postgresql/data
            - name: {{ .Release.Name }}-initsql
              mountPath: /docker-entrypoint-initdb.d
          {{ if .Values.cluster.containers }}
          {{- toYaml .Values.cluster.containers | nindent 10 }}
          {{ end }}
{{ end }}
