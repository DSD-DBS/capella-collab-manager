# SPDX-FileCopyrightText: Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: Apache-2.0

{{ if .Values.loki.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grafana-server
  namespace: {{ .Release.Namespace }}
  labels:
    id: {{ .Release.Name }}-deployment-grafana-server
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/grafana" "/grafana.configmap.yaml") . | sha256sum }}
    checksum/dashboards: {{ include (print $.Template.BasePath "/grafana" "/grafana-dashboards.configmap.yaml") . | sha256sum }}
    checksum/certs: {{ include (print $.Template.BasePath "/grafana" "/grafana-certs.configmap.yaml") . | sha256sum }}
    checksum/alerts: {{ include (print $.Template.BasePath "/grafana" "/grafana-alerts.configmap.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount.grafana | default 1 }}
  selector:
    matchLabels:
      id: {{ .Release.Name }}-deployment-grafana-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        id: {{ .Release.Name }}-deployment-grafana-server
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/grafana" "/grafana.configmap.yaml") . | sha256sum }}
        checksum/dashboards: {{ include (print $.Template.BasePath "/grafana" "/grafana-dashboards.configmap.yaml") . | sha256sum }}
        checksum/certs: {{ include (print $.Template.BasePath "/grafana" "/grafana-certs.configmap.yaml") . | sha256sum }}
        checksum/alerts: {{ include (print $.Template.BasePath "/grafana" "/grafana-alerts.configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Release.Name }}-grafana
      {{- include "capellacollab.pod.spec" . | indent 6 -}}
      containers:
        - name: grafana
          {{- include "capellacollab.container.spec" . | indent 10 -}}
          {{ if .Values.docker.images.grafana }}
          image: {{ .Values.docker.images.grafana }}
          {{ else }}
          image: {{ .Values.docker.registry.external }}/grafana/grafana:11.1.0
          {{ end }}
          ports:
            - containerPort: 3000
          resources:
            {{ if .Values.development }}
            limits:
              cpu: "0.5"
              memory: 500Mi
              ephemeral-storage: "2Gi"
            requests:
              cpu: "0.1"
              memory: 50Mi
            {{ else }}
            requests:
              cpu: 500m
              memory: 500M
            limits:
              cpu: 1
              memory: 1Gi
              ephemeral-storage: "2Gi"
            {{ end }}
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: storage
              mountPath: /var/lib/grafana
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards-config
              mountPath: /etc/grafana/provisioning/dashboards
            - name: alerting
              mountPath: /etc/grafana/provisioning/alerting
            - name: dashboards
              mountPath: /etc/dashboards
            {{- range $key, $value := .Files.Glob "config/certs/*" }}
            - name: certs
              mountPath: /etc/ssl/certs/{{ $key | base }}
              subPath: {{ $key | base }}
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-grafana
            items:
              - key: grafana.ini
                path: grafana.ini
        - name: datasources
          configMap:
            name: {{ .Release.Name }}-grafana
            items:
              - key: datasources.yaml
                path: datasources.yaml
        - name: dashboards-config
          configMap:
            name: {{ .Release.Name }}-grafana
            items:
              - key: dashboards.yaml
                path: dashboards.yaml
        - name: dashboards
          configMap:
            name: {{ .Release.Name }}-grafana-dashboards
        - name: alerting
          configMap:
            name: {{ .Release.Name }}-grafana-alerting
        - name: certs
          configMap:
            name: {{ .Release.Name }}-grafana-certs
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name -}}-grafana
{{ end }}
