# Copyright DB Netz AG and the capella-collab-manager contributors
# SPDX-License-Identifier: Apache-2.0

{{ if .Values.database.backend.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend-postgres
  labels:
    id: {{ .Release.Name }}-deployment-backend-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      id: {{ .Release.Name }}-deployment-backend-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        id: {{ .Release.Name }}-deployment-backend-postgres
    spec:
      {{ if ne .Values.target "local" }}
      volumes:
        - name: {{ .Release.Name }}-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-volume-backend-postgres
      {{ end }}
      containers:
        - name: {{ .Release.Name }}-backend-postgres
          image: {{ .Values.docker.registry.external }}/postgres:14.1
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/data
            - name: POSTGRES_DB
              value: backend
            - name: POSTGRES_PASSWORD
              value: {{ .Values.database.backend.internal.password }}
            - name: POSTGRES_USER
              value: backend
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command: ["psql", "-W", "{{ .Values.database.backend.internal.password }}", "-U", "backend", "-d", "backend", "-c", "SELECT 1"]
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["psql", "-W", "{{ .Values.database.backend.internal.password }}", "-U", "backend", "-d", "backend", "-c", "SELECT 1"]
            initialDelaySeconds: 45
            timeoutSeconds: 2
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1"
          {{ if ne .Values.target "local" }}
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /var/lib/postgresql/data
          {{ end }}
          {{ if .Values.cluster.containers }}
          {{- toYaml .Values.cluster.containers | nindent 10 }}
          {{ end }}
{{ end }}
