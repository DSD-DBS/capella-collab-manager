# SPDX-FileCopyrightText: Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: Apache-2.0

{{ if .Values.database.backend.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend-postgres
  labels:
    id: {{ .Release.Name }}-deployment-backend-postgres
spec:
  replicas: {{ .Values.replicaCount.backendPostgres | default 1 }}
  selector:
    matchLabels:
      id: {{ .Release.Name }}-deployment-backend-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        id: {{ .Release.Name }}-deployment-backend-postgres
    spec:
      automountServiceAccountToken: false
      {{ if not .Values.development }}
      volumes:
        - name: {{ .Release.Name }}-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-volume-backend-postgres
      {{ end }}
      {{- include "capellacollab.pod.spec" . | indent 6 -}}
      containers:
        - name: {{ .Release.Name }}-backend-postgres
          {{- include "capellacollab.container.spec" . | indent 10 -}}
          {{ if .Values.docker.images.postgres }}
          image: {{ .Values.docker.images.postgres }}
          {{ else }}
          image: {{ .Values.docker.registry.external }}/postgres:14.1
          {{ end }}
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/data
            - name: POSTGRES_DB
              value: backend
            - name: POSTGRES_PASSWORD
              value: {{ .Values.database.backend.internal.password | required ".Values.database.backend.internal.password is required. Please generate a random password and set it in the values.yaml." }}
            - name: POSTGRES_USER
              value: backend
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command: ["psql", "-W", "{{ .Values.database.backend.internal.password }}", "-U", "backend", "-d", "backend", "-c", "SELECT 1"]
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["psql", "-W", "{{ .Values.database.backend.internal.password }}", "-U", "backend", "-d", "backend", "-c", "SELECT 1"]
            initialDelaySeconds: 45
            timeoutSeconds: 2
          resources:
            requests:
              cpu: "25m"
              memory: 50Mi
              ephemeral-storage: '1Gi'
            limits:
              cpu: "0.1"
              memory: 250Mi
              ephemeral-storage: "2Gi"
          {{ if not .Values.development }}
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /var/lib/postgresql/data
          {{ end }}
{{ end }}
