#########################################
### APPLICATION RELATED CONFIGURATION ###
#########################################


docker:
  # Registry for Docker Images, will be used as prefix for Docker Images
  registry: 
    internal: localhost
    external: docker.io

  images:
    # Docker Image for the Frontend
    frontend: /capella/collab/frontend

    # Docker Image for the Backend
    backend: /capella/collab/backend

    # Docker Image for EASE
    ease: /t4c/client/ease

    # Docker Image for T4C Backup
    importer: /t4c/client/importer

    workspaces: 
      # Docker Image for the Persistent Workspace Session
      persistent: /t4c/client/remote

      # Docker Image for the ReadOnly Workspace
      readonly: /capella/readonly

    guacamole: 
      # The registry needs to specified here!
      guacamole: docker.io/guacamole/guacamole
      guacd: docker.io/guacamole/guacd

general: 
  # Base URL on which the service listens
  host: localhost
  port: 80
  scheme: http

database: 
  # Database Configuration for Guacamole
  guacamole: 

    # Define whether the database should also be deployed
    # in the cluster or whether it already exists externally. 
    deploy: False

    internal: 
      ###### IF database.guacamole.deploy == True ######

      # Admin password of the database
      password: secret

    external: 
      ###### IF database.guacamole.deploy == False ######

      # Select type of external database
      # Possible values: MYSQL | POSTGRES
      type: POSTGRES

      # Configure the hostname of the external database
      hostname: 

      # Configure the database name of the external database
      database: 

      # Configure the username of the external database
      username: 

      # Configure the password of the external database
      password: 

  # Database Configuration for the T4C Manager
  backend: 

    # Define whether the database should also be deployed
    # in the cluster or whether it already exists externally. 
    deploy: False
    
    # Username of an initial admin user 
    # Is only set if the database is empty!
    initialAdmin: me@example.com

    internal: 
      ###### IF database.backend.deploy == True ######

      # Admin password of the database
      password: secret

    external:
      ###### IF database.backend.deploy == False ######

      # Provide URI to the datebase in the format: postgresql://user:password@url:port/db_name
      uri: postgresql://user:password@url:port/db_name

guacamole:
  # Credentials for the Guacamole Admin User
  username: guacadmin
  password: guacadmin

backend:
  authentication:
    provider: oauth # oauth | azure
    jwt:
      usernameClaim: sub # azure: preferred_username

    oauth: 
      # Only required when using provider oauth
      endpoints: 
        # Endpoint that issues JWT Tokens
        tokenIssuance: na
        # Endpoint that authorizes the User
        authorization: na
        # Or, define a wellKnown Endpoint and read token/auth urls from there:
        wellKnown: http://dev-t4c-manager-oauth-mock:8080/default/.well-known/openid-configuration

      audience: default

      publicKey: |
        -----BEGIN PUBLIC KEY-----
        -----END PUBLIC KEY-----

      scopes: 
        - openid

      client: 
        # OAUTH2 Client ID
        id: tbd
        # OAUTH2 Client Secret
        secret: tbd

      redirectURI: http://localhost:8080/oauth2/callback

    azure: 
      # Only required when using provider oauth
      authorizationEndpoint: tbd
      
      client: 
        id: tbd
        secret: tbd

      audience: tbd
      redirectURI: tbd
      
      connectConfigurationEndpoint: tbd

  garbageCleaner:
    cron: "*/10 * * * *"

  # Namespace in which the Session Deployments / Pods should be spawned.
  # IMPORTANT: The namespace has to exist already
  k8sSessionNamespace: t4c-sessions
  storageClassName: local-path
  storageAccessMode: ReadWriteOnce

t4cServer:
  # URL to access the REST APIs of the T4C Server

  apis:
    # API Base for usage and status endpoints 
    # The following endpoints have to be reachable: 
    # - <base>/usage/json
    # - <base>/status/json
    usageStats: http://localhost:8086

    # REST API Base for REST API including the prefix (CRUD for repositories, projects and users)
    # All REST endpoints have to reachable. 
    restAPI: http://localhost:8090/api/v1.0

  # Credentials to authenticate against the REST API endpoint (HTTPBasic)
  username: sampleUser
  password: samplePassword

  # IPv4 Address of the T4C Server
  host: localhost
  port: 2036
  licenseKey: tbd

jenkins:
  # Admin Credentials for Jenkins Instance
  username: tbd
  password: tbd

  # Base URL of the existing Jenkins Instance
  baseURL: tbd

git:
  # Git Credentials to fetch the Models from Git for the Read Only Workspaces.
  username: tbd
  password: tbd

  # E-Mail for Commits made by the created Backups Jobs
  email: tbd

  # Jenkins Git Credentials ID (Git Plugin)
  credentialID: tbd

  # Repository URL for Scripts used by the Jenkins Backup Job (dsh-tools)
  scriptRepoURL: tbd



########################################
### KUBERNETES RELATED CONFIGURATION ###
########################################

# target: local | azure
target: local

cluster: 
  kind: Kubernetes # Kubernetes | OpenShift

  containers: 
    # The following values are appended to each container

  service: 
    fqdn: capella.example.de

  namespaces: 
    sessions: 
      containers: 
        # The following values are appended to each container in the sessions namespace