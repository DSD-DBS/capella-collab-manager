# Copyright DB Netz AG and the capella-collab-manager contributors
# SPDX-License-Identifier: Apache-2.0

#########################################
### APPLICATION RELATED CONFIGURATION ###
#########################################

docker:
  # Registry for Docker Images, will be used as prefix for Docker Images
  registry:
    internal: localhost
    external: docker.io

  images:
    # Docker Image for the Frontend
    frontend: /capella/collab/frontend

    # Docker Image for the Backend
    backend: /capella/collab/backend

    # Docker Image for EASE
    ease: /t4c/client/ease

    # Docker Image for T4C Backup
    importer: /t4c/client/importer

    workspaces:
      # Docker Image for the Persistent Workspace Session
      persistent: /t4c/client/remote

      # Docker Image for the ReadOnly Workspace
      readonly: /capella/readonly

    guacamole:
      # The registry needs to specified here!
      guacamole: docker.io/guacamole/guacamole
      guacd: docker.io/guacamole/guacd

    prometheus: prom/prometheus

general:
  # Base URL on which the service listens
  host: localhost
  port: 80
  scheme: http

database:
  # Database Configuration for Guacamole
  guacamole:
    # Define whether the database should also be deployed
    # in the cluster or whether it already exists externally.
    deploy: True

    internal:
      ###### IF database.guacamole.deploy == True ######

      # Admin password of the database
      password: secret

    external:
      ###### IF database.guacamole.deploy == False ######

      # Select type of external database
      # Possible values: MYSQL | POSTGRES
      type: POSTGRES

      # Configure the hostname of the external database
      hostname:

      # Configure the database name of the external database
      database:

      # Configure the username of the external database
      username:

      # Configure the password of the external database
      password:

  # Database Configuration for the T4C Manager
  backend:
    # Define whether the database should also be deployed
    # in the cluster or whether it already exists externally.
    deploy: True

    # Username of an initial admin user
    # Is only set if the database is empty!
    initialAdmin: admin

    internal:
      ###### IF database.backend.deploy == True ######

      # Admin password of the database
      password: secret

    external:
      ###### IF database.backend.deploy == False ######

      # Provide URI to the datebase in the format: postgresql://user:password@url:port/db_name
      uri: postgresql://user:password@url:port/db_name

guacamole:
  # Credentials for the Guacamole Admin User
  username: guacadmin
  password: guacadmin

backend:
  authentication:
    provider: oauth # oauth | azure
    jwt:
      usernameClaim: sub # azure: preferred_username

    oauth:
      # Only required when using provider oauth
      endpoints:
        wellKnown: http://dev-t4c-manager-oauth-mock:8080/default/.well-known/openid-configuration
        # Override endpoint that issues JWT Tokens
        tokenIssuance: ""
        # Override endpoint that authorizes the User
        authorization: http://localhost:8080/default/authorize

      audience: default

      publicKey: |
        -----BEGIN PUBLIC KEY-----
        -----END PUBLIC KEY-----

      scopes:
        - openid

      client:
        # OAUTH2 Client ID
        id: tbd
        # OAUTH2 Client Secret
        secret: tbd

      redirectURI: http://localhost:8080/oauth2/callback

    azure:
      # Only required when using provider oauth
      authorizationEndpoint: tbd

      client:
        id: tbd
        secret: tbd

      audience: tbd
      redirectURI: tbd

      connectConfigurationEndpoint: tbd

  garbageCleaner:
    cron: "*/10 * * * *"

  # Namespace in which the Session Deployments / Pods should be spawned.
  # IMPORTANT: The namespace has to exist already
  k8sSessionNamespace: t4c-sessions
  storageClassName: local-path
  storageAccessMode: ReadWriteOnce

t4cServer:
  # URL to access the REST APIs of the T4C Server

  apis:
    # API Base for usage and status endpoints
    # The following endpoints have to be reachable:
    # - <base>/usage/json
    # - <base>/status/json
    usageStats: http://localhost:8086

    # REST API Base for REST API including the prefix (CRUD for repositories, projects and users)
    # All REST endpoints have to reachable.
    restAPI: http://localhost:8090/api/v1.0

  # Credentials to authenticate against the REST API endpoint (HTTPBasic)
  username: sampleUser
  password: samplePassword

  # IPv4 Address of the T4C Server
  host: localhost
  port: 2036
  licenseKey: tbd

jenkins:
  # Admin Credentials for Jenkins Instance
  username: tbd
  password: tbd

  # Base URL of the existing Jenkins Instance
  baseURL: tbd

git:
  # Git Credentials to fetch the Models from Git for the Read Only Workspaces.
  username: tbd
  password: tbd

  # E-Mail for Commits made by the created Backups Jobs
  email: tbd

  # Jenkins Git Credentials ID (Git Plugin)
  credentialID: tbd

  # Repository URL for Scripts used by the Jenkins Backup Job (dsh-tools)
  scriptRepoURL: tbd

prometheus:
  config:
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    rule_files:
      - /etc/prometheus/prometheus.rules

    scrape_configs:
      - job_name: "kubernetes-apiservers"

        kubernetes_sd_configs:
          - role: endpoints
        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
          - source_labels:
              [
                __meta_kubernetes_namespace,
                __meta_kubernetes_service_name,
                __meta_kubernetes_endpoint_port_name,
              ]
            action: keep
            regex: default;kubernetes;https

      - job_name: "kubernetes-nodes"

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
          - role: node

        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      - job_name: "kubernetes-pods"

        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - t4c-sessions

        relabel_configs:
          - source_labels:
              [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      - job_name: "kube-state-metrics"
        static_configs:
          - targets: ["kube-state-metrics.kube-system.svc.cluster.local:39131"]

      - job_name: "kubernetes-cadvisor"

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
          - role: node

        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      - job_name: "kubernetes-service-endpoints"

        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - t4c-sessions

        relabel_configs:
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [
                __address__,
                __meta_kubernetes_service_annotation_prometheus_io_port,
              ]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name

  rules:
    groups:
      - name: Inactivity
        rules:
          - alert: Inactivity (10m)
            expr: idletime_minutes > 60
            for: 1m
            labels:
              severity: slack
            annotations:
              summary: High Idletime

  externalUrl: http://localhost:8080/prometheus/

########################################
### KUBERNETES RELATED CONFIGURATION ###
########################################

# target: local | azure
target: local

cluster:
  kind: Kubernetes # Kubernetes | OpenShift

  containers:
    # The following values are appended to each container

  service:
    fqdn: capella.example.de

  namespaces:
    sessions:
      containers:
      # The following values are appended to each container in the sessions namespace
