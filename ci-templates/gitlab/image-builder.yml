# SPDX-FileCopyrightText: Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: Apache-2.0

variables:
  PRIVATE_GPG_PATH: /secrets/private.gpg
  FRONTEND:
    value: '1'
    description: 'Build the frontend image?'
  BACKEND:
    value: '1'
    description: 'Build the backend image?'
  DOCS:
    value: '1'
    description: 'Build the docs image?'
  GUACAMOLE:
    value: '1'
    description: 'Build the guacamole image?'
  SESSION_PREPARATION:
    value: '1'
    description: 'Build the session-preparation image?'
  REVISION:
    value: 'main'
    description: 'Revision of GitHub repository'
  TARGET:
    value: staging
  FRONTEND_IMAGE_NAME: 'capella/collab/frontend'
  BACKEND_IMAGE_NAME: 'capella/collab/backend'
  DOCS_IMAGE_NAME: 'capella/collab/docs'
  GUACAMOLE_IMAGE_NAME: 'capella/collab/guacamole'
  SESSION_PREPARATION_IMAGE_NAME: 'capella/collab/session-preparation'
  DOCKER_BUILD_ARGS: '--no-cache'
  DOCKER_BUILDKIT: '1'
  BASE_IMAGE: 'debian:bookworm'
  KUBECTL_APT_REMOTE: 'https://apt.kubernetes.io/'

  DEBIAN_SLIM_BASE_IMAGE: 'debian:bookworm-slim'
  ALPINE_BASE_IMAGE: 'alpine:latest'

default:
  image: $DOCKER_REGISTRY/base
  tags:
    - docker

.sops: &sops
  - apt-get install -y jq
  - gpg --import ${PRIVATE_GPG_PATH}
  - DOCKER_REGISTRY=$(sops -d ${TARGET}/secret.docker.json | jq -r ".registry")

.github: &github
  - git clone https://github.com/dbinfrago/capella-collab-manager.git
  - cd capella-collab-manager
  - git checkout ${REVISION}

.docker: &docker
  - docker info
  - unset DOCKER_AUTH_CONFIG
  - >
    sops -d ../${TARGET}/secret.docker.json | \
      jq -r ".password" | \
      docker login \
        -u $(sops -d ../${TARGET}/secret.docker.json | jq -r ".username") \
        --password-stdin \
        ${DOCKER_REGISTRY}
  - docker pull $BASE_IMAGE

.push: &push
  - >
    if [ "${REVISION}" = "main" ]; then
      docker image tag ${IMAGE}:${DOCKER_TAG} ${IMAGE}:latest;
      docker push ${IMAGE}:latest;
    fi
  - docker push ${IMAGE}:${DOCKER_TAG}

.prepare: &prepare
  - *sops
  # prettier-ignore
  - DOCKER_TAG=$(echo ${REVISION} | sed 's/[^a-zA-Z0-9.]/-/g')-$CI_COMMIT_REF_SLUG
  - *github

frontend:
  stage: build
  rules:
    - if: '$FRONTEND == "1"'
      when: always
  script:
    - *prepare
    - IMAGE=${DOCKER_REGISTRY}/${FRONTEND_IMAGE_NAME:?}
    - *docker
    - mv ../favicon.ico frontend/src
    - python frontend/fetch-version.py
    - >
      docker build ${DOCKER_BUILD_ARGS} \
        -t ${IMAGE}:${DOCKER_TAG} \
        --build-arg BASE_IMAGE=${BASE_IMAGE} \
        frontend
    - *push

backend:
  stage: build
  rules:
    - if: '$BACKEND == "1"'
      when: always
  script:
    - *prepare
    - IMAGE=${DOCKER_REGISTRY}/${BACKEND_IMAGE_NAME:?}
    - *docker
    - python backend/generate_git_archival.py
    - >
      docker build \
        ${DOCKER_BUILD_ARGS} \
        -t ${IMAGE}:${DOCKER_TAG} \
        --build-arg BASE_IMAGE=${BASE_IMAGE} \
        --build-arg KUBECTL_APT_REMOTE="${KUBECTL_APT_REMOTE}" \
        backend
    - *push

docs:
  stage: build
  rules:
    - if: '$DOCS == "1"'
      when: always
  script:
    - *prepare
    - IMAGE=${DOCKER_REGISTRY}/${DOCS_IMAGE_NAME:?}
    - *docker
    - >
      docker build \
        ${DOCKER_BUILD_ARGS} \
        -t ${IMAGE}:${DOCKER_TAG} \
        --build-arg BASE_IMAGE=${BASE_IMAGE} \
        docs
    - *push

guacamole:
  stage: build
  rules:
    - if: '$GUACAMOLE == "1"'
      when: always
  script:
    - *prepare
    - IMAGE=${DOCKER_REGISTRY}/${GUACAMOLE_IMAGE_NAME:?}
    - *docker
    - >
      docker build \
        ${DOCKER_BUILD_ARGS} \
        -t ${IMAGE}:${DOCKER_TAG} \
        --build-arg BASE_IMAGE=guacamole/guacamole \
        --build-arg DEBIAN_SLIM_BASE_IMAGE=$DEBIAN_SLIM_BASE_IMAGE \
        images/guacamole
    - *push

session-preparation:
  stage: build
  rules:
    - if: '$SESSION_PREPARATION == "1"'
      when: always
  script:
    - *prepare
    - IMAGE=${DOCKER_REGISTRY}/${SESSION_PREPARATION_IMAGE_NAME:?}
    - *docker
    - >
      docker build \
        ${DOCKER_BUILD_ARGS} \
        -t ${IMAGE}:${DOCKER_TAG} \
        --build-arg ALPINE_BASE_IMAGE=$ALPINE_BASE_IMAGE \
        images/session-preparation
    - *push
