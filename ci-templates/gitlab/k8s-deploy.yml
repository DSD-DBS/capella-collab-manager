# SPDX-FileCopyrightText: Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: Apache-2.0

variables:
  GRAFANA_HELM_CHART: https://grafana.github.io/helm-charts/
  PROMETHEUS_HELM_CHARTS: https://prometheus-community.github.io/helm-charts
  PRIVATE_GPG_PATH: /secrets/private.gpg
  TARGET:
    value: 'staging'
    description: 'Specify the target (staging/production)'
  REVISION:
    value: 'main'
    description: 'Revision of the GitHub repository (capella-collab-manager)'

.sops: &sops
  - apt-get install -y jq
  - gpg --import ${PRIVATE_GPG_PATH}

.prepare: &prepare
  - *sops
  - git clone https://github.com/DSD-DBS/capella-collab-manager
  - cd capella-collab-manager
  - git checkout ${REVISION}
  # prettier-ignore
  - sed -i "s#https://grafana.github.io/helm-charts/#${GRAFANA_HELM_CHART}#g" ./helm/Chart.yaml
  - sed -i
    "s#https://prometheus-community.github.io/helm-charts#${PROMETHEUS_HELM_CHARTS}#g"
    ./helm/Chart.yaml

.kubernetes: &kubernetes
  - NAMESPACE=$(sops -d ../${TARGET}/secret.k8s.json | jq -r ".namespace")
  # prettier-ignore
  - kubectl config set-cluster cluster --server=$(sops -d ../${TARGET}/secret.k8s.json | jq -r ".server")
  - >
    kubectl config set-context context \
      --namespace=${NAMESPACE} \
      --user=$(sops -d ../${TARGET}/secret.k8s.json | jq -r ".username") \
      --cluster=cluster
  - >
    kubectl config set-credentials \
      $(sops -d ../${TARGET}/secret.k8s.json | jq -r ".username") \
      --token=$(sops -d ../${TARGET}/secret.k8s.json | jq -r ".token")
  - kubectl config use-context context

.helm-deploy: &helm-deploy
  - RELEASE=$(sops -d ../${TARGET}/secret.k8s.json | jq -r ".release")
  - cp -r ../config/* helm/config
  # prettier-ignore
  - DOCKER_TAG=$(echo $REVISION | sed 's/[^a-zA-Z0-9.]/-/g')-$CI_COMMIT_REF_SLUG
  - helm dependency update ./helm
  - HELM_PACKAGE_DIR=$(mktemp -d)
  - >
    helm package \
      --app-version="$DOCKER_TAG" \
      --version="$(git describe --tags)" \
      -d "$HELM_PACKAGE_DIR" \
      helm
  - |
    sops -d ../${TARGET}/values.yaml | \
    helm upgrade ${RELEASE} \
      --namespace ${NAMESPACE} \
      --set docker.tag=${DOCKER_TAG} \
      -f - \
      "$HELM_PACKAGE_DIR"/collab-manager-*.tgz

  - kubectl rollout restart deployment ${RELEASE}-backend
  - kubectl rollout restart deployment ${RELEASE}-frontend
  - kubectl rollout restart deployment ${RELEASE}-docs

  - kubectl rollout status --timeout=5m deployment ${RELEASE}-backend
  - kubectl rollout status --timeout=5m deployment ${RELEASE}-frontend
  - kubectl rollout status --timeout=5m deployment ${RELEASE}-docs

deploy:
  stage: deploy
  image: ${DOCKER_REGISTRY}/base
  environment: ${TARGET}
  script:
    - *prepare
    - *kubernetes
    - *helm-deploy
