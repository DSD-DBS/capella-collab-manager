# SPDX-FileCopyrightText: Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: CC0-1.0

name: documentation
on:
  push:
    branches: ["main"]

concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Create Swagger directory
        run: mkdir -p ./swagger
      - name: Download SwaggerUI
        working-directory: ./swagger
        run: |
          SWAGGER_UI_DOWNLOAD_URL=$(curl -s https://api.github.com/repos/swagger-api/swagger-ui/releases/latest | grep tarball_url | cut -d '"' -f 4)
          curl -L -o swagger.tar.gz "$SWAGGER_UI_DOWNLOAD_URL"
          tar -xzf swagger.tar.gz --strip-components=1
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
      - name: Install backend
        run: uv pip install ./backend
      - name: Install docs dependencies
        run: uv pip install --system -r docs/requirements.txt
      - run: mkdocs build --strict -d dist
        working-directory: ./docs
      - name: Generate OpenAPI spec
        run: |
          mkdir -p docs/dist/api
          python -m capellacollab.cli openapi generate --remove-security-schemes docs/dist/api/openapi.json
      - name: Copy SwaggerUI
        run: |
          mkdir -p docs/dist/api/swagger
          cp -r swagger/dist/* docs/dist/api/swagger
          ls -la docs/dist/api/swagger
          sed -i 's#https://petstore.swagger.io/v2/swagger.json#/${{ github.event.repository.name }}/api/docs/openapi.json#' docs/dist/api/swagger/swagger-initializer.js
          sed -i '/SwaggerUIBundle({/a\    supportedSubmitMethods: [],' docs/dist/api/swagger/swagger-initializer.js
          sed -i '/layout: "StandaloneLayout"/d;/SwaggerUIStandalonePreset/d' docs/dist/api/swagger/swagger-initializer.js
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/dist
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
