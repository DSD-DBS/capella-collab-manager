/*
 * SPDX-FileCopyrightText: Copyright DB InfraGO AG and contributors
 * SPDX-License-Identifier: Apache-2.0
 *
 * Capella Collaboration Manager API
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 + To generate a new version, run `make openapi` in the root directory of this repository.
 */



export interface ProjectUserScopesInput { 
    /**
     * Add capability to delete the project or update the project metadata (visibility & project type & archiving)
     */
    root?: Array<ProjectUserScopesInput.RootEnum>;
    /**
     * See pipelines, create new pipelines or delete existing pipelines
     */
    pipelines?: Array<ProjectUserScopesInput.PipelinesEnum>;
    /**
     * Allow access to see or trigger pipeline runs
     */
    pipeline_runs?: Array<ProjectUserScopesInput.PipelineRunsEnum>;
    /**
     * Fetch diagrams via the diagram cache API
     */
    diagram_cache?: Array<ProjectUserScopesInput.DiagramCacheEnum>;
    /**
     * See links to TeamForCapella repositories
     */
    t4c_model_links?: Array<ProjectUserScopesInput.T4cModelLinksEnum>;
    /**
     * Manage links to Git repositories
     */
    git_model_links?: Array<ProjectUserScopesInput.GitModelLinksEnum>;
    /**
     * Manage tool models (UPDATE = Update description, version, nature and order of tool model)
     */
    tool_models?: Array<ProjectUserScopesInput.ToolModelsEnum>;
    /**
     * Configure used tools in the project
     */
    used_tools?: Array<ProjectUserScopesInput.UsedToolsEnum>;
    /**
     * Manage project users UPDATE/CREATE can also be used to update roles / escalate own privileges. Use with caution!
     */
    project_users?: Array<ProjectUserScopesInput.ProjectUsersEnum>;
    /**
     * Access log of project users
     */
    access_log?: Array<ProjectUserScopesInput.AccessLogEnum>;
    /**
     * Access to provisioned and read-only sessions (includes access to the content of linked Git repositories)
     */
    provisioning?: Array<ProjectUserScopesInput.ProvisioningEnum>;
    /**
     * Access to TeamForCapella repositories in persistent sessions (Session token will created with GET access)
     */
    t4c_access?: Array<ProjectUserScopesInput.T4cAccessEnum>;
    /**
     * Manage restrictions on models (Provide access to pure::variants)
     */
    restrictions?: Array<ProjectUserScopesInput.RestrictionsEnum>;
    /**
     * Access to shared Jupyter workspaces. GET will provide read-only access, UPDATE will provide read & write access.
     */
    shared_volumes?: Array<ProjectUserScopesInput.SharedVolumesEnum>;
}
export namespace ProjectUserScopesInput {
    export type RootEnum = 'GET' | 'UPDATE' | 'DELETE';
    export const RootEnum = {
        Get: 'GET' as RootEnum,
        Update: 'UPDATE' as RootEnum,
        Delete: 'DELETE' as RootEnum
    };
    export type PipelinesEnum = 'GET' | 'CREATE' | 'DELETE';
    export const PipelinesEnum = {
        Get: 'GET' as PipelinesEnum,
        Create: 'CREATE' as PipelinesEnum,
        Delete: 'DELETE' as PipelinesEnum
    };
    export type PipelineRunsEnum = 'GET' | 'CREATE';
    export const PipelineRunsEnum = {
        Get: 'GET' as PipelineRunsEnum,
        Create: 'CREATE' as PipelineRunsEnum
    };
    export type DiagramCacheEnum = 'GET';
    export const DiagramCacheEnum = {
        Get: 'GET' as DiagramCacheEnum
    };
    export type T4cModelLinksEnum = 'GET' | 'UPDATE' | 'CREATE' | 'DELETE';
    export const T4cModelLinksEnum = {
        Get: 'GET' as T4cModelLinksEnum,
        Update: 'UPDATE' as T4cModelLinksEnum,
        Create: 'CREATE' as T4cModelLinksEnum,
        Delete: 'DELETE' as T4cModelLinksEnum
    };
    export type GitModelLinksEnum = 'GET' | 'UPDATE' | 'CREATE' | 'DELETE';
    export const GitModelLinksEnum = {
        Get: 'GET' as GitModelLinksEnum,
        Update: 'UPDATE' as GitModelLinksEnum,
        Create: 'CREATE' as GitModelLinksEnum,
        Delete: 'DELETE' as GitModelLinksEnum
    };
    export type ToolModelsEnum = 'GET' | 'UPDATE' | 'CREATE' | 'DELETE';
    export const ToolModelsEnum = {
        Get: 'GET' as ToolModelsEnum,
        Update: 'UPDATE' as ToolModelsEnum,
        Create: 'CREATE' as ToolModelsEnum,
        Delete: 'DELETE' as ToolModelsEnum
    };
    export type UsedToolsEnum = 'GET' | 'CREATE' | 'DELETE';
    export const UsedToolsEnum = {
        Get: 'GET' as UsedToolsEnum,
        Create: 'CREATE' as UsedToolsEnum,
        Delete: 'DELETE' as UsedToolsEnum
    };
    export type ProjectUsersEnum = 'GET' | 'UPDATE' | 'CREATE' | 'DELETE';
    export const ProjectUsersEnum = {
        Get: 'GET' as ProjectUsersEnum,
        Update: 'UPDATE' as ProjectUsersEnum,
        Create: 'CREATE' as ProjectUsersEnum,
        Delete: 'DELETE' as ProjectUsersEnum
    };
    export type AccessLogEnum = 'GET';
    export const AccessLogEnum = {
        Get: 'GET' as AccessLogEnum
    };
    export type ProvisioningEnum = 'GET' | 'DELETE';
    export const ProvisioningEnum = {
        Get: 'GET' as ProvisioningEnum,
        Delete: 'DELETE' as ProvisioningEnum
    };
    export type T4cAccessEnum = 'UPDATE';
    export const T4cAccessEnum = {
        Update: 'UPDATE' as T4cAccessEnum
    };
    export type RestrictionsEnum = 'GET' | 'UPDATE';
    export const RestrictionsEnum = {
        Get: 'GET' as RestrictionsEnum,
        Update: 'UPDATE' as RestrictionsEnum
    };
    export type SharedVolumesEnum = 'GET' | 'UPDATE';
    export const SharedVolumesEnum = {
        Get: 'GET' as SharedVolumesEnum,
        Update: 'UPDATE' as SharedVolumesEnum
    };
}


