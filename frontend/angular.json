{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "capellacollab": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:application": {
          "strict": true
        },
        "@schematics/angular:component": {
          "skipTests": true,
          "style": "none"
        },
        "@schematics/angular:service": {
          "skipTests": true
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/capellacollab",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": ["src/polyfills.ts"],
            "tsConfig": "tsconfig.app.json",
            "assets": ["src/favicon.ico", "src/assets", "src/fonts"],
            "styles": [
              "@angular/material/prebuilt-themes/indigo-pink.css",
              "monaco-editor/min/vs/editor/editor.main.css",
              "src/styles.css",
              "node_modules/ngx-toastr/toastr.css",
              "monaco-editor/min/vs/editor/editor.main.css",
              "node_modules/highlight.js/styles/default.css"
            ],
            "loader": {
              ".ttf": "file"
            },
            "optimization": {
              "fonts": true
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "5mb",
                  "maximumError": "10mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.dev.ts"
                }
              ]
            },
            "storybook": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "5mb",
                  "maximumError": "10mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "outputHashing": "all",
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.storybook.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "capellacollab:build:production"
            },
            "development": {
              "buildTarget": "capellacollab:build:development"
            },
            "playwright": {
              "buildTarget": "capellacollab:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "buildTarget": "capellacollab:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.spec.json",
            "karmaConfig": "karma.conf.js",
            "fileReplacements": [
              {
                "replace": "src/environments/environment.ts",
                "with": "src/environments/environment.dev.ts"
              }
            ],
            "codeCoverage": true
          }
        },
        "lint": {
          "builder": "@angular-eslint/builder:lint",
          "options": {
            "lintFilePatterns": ["src/**/*.ts", "src/**/*.html"]
          }
        },
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "options": {
            "configDir": ".storybook",
            "quiet": true,
            "browserTarget": "capellacollab:build:development",
            "compodoc": true,
            "compodocArgs": ["-e", "json", "-d", "."],
            "port": 6006,
            "styles": [
              ".storybook/styles.css",
              "@angular/material/prebuilt-themes/indigo-pink.css",
              "monaco-editor/min/vs/editor/editor.main.css",
              "src/styles.css",
              "node_modules/ngx-toastr/toastr.css",
              "node_modules/highlight.js/styles/default.css"
            ]
          }
        },
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "options": {
            "configDir": ".storybook",
            "webpackStatsJson": true,

            "browserTarget": "capellacollab:build:storybook",
            "compodoc": true,
            "compodocArgs": ["-e", "json", "-d", "."],
            "outputDir": "storybook-static",
            "styles": [
              ".storybook/styles.css",
              "@angular/material/prebuilt-themes/indigo-pink.css",
              "monaco-editor/min/vs/editor/editor.main.css",
              "src/styles.css",
              "node_modules/ngx-toastr/toastr.css",
              "node_modules/highlight.js/styles/default.css"
            ]
          }
        }
      }
    }
  },
  "cli": {
    "analytics": false,
    "schematicCollections": ["@angular-eslint/schematics"]
  },
  "schematics": {
    "@angular-eslint/schematics:application": {
      "setParserOptionsProject": true
    },
    "@angular-eslint/schematics:library": {
      "setParserOptionsProject": true
    }
  }
}
